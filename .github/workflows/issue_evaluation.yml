name: Issue Evaluation and Labeling

on:
  issues:
    types: [opened, reopened]

jobs:
  evaluate:
    if: contains(fromJson('["ianderrington"]'), github.actor)
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    permissions:
      issues: write
      contents: read
    outputs: 
      label: ${{ steps.evaluate_issue.outputs.label }}
      body: ${{ steps.evaluate_issue.outputs.body }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.10'

      # - name: Install Python dependencies
      #   run: python -m pip install --upgrade pip
      - name: activate venv
        run: |
          conda activate genai

      - name: Run issue evaluation script
        id: evaluate_issue
        run: python .github/scripts/evaluate_issue.py "${{ github.event.issue.number }}" "${{ github.event.issue.body }}" >> "$GITHUB_OUTPUT"
        # run: echo "label=IncludeInDocs" >> "$GITHUB_OUTPUT"

  label:
    if: contains(fromJson('["ianderrington"]'), github.actor)
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    needs: evaluate
    steps: 
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Label Issue
        env:
          LABEL: ${{ needs.evaluate.outputs.label }} 
          GH_TOKEN: ${{ github.token }}
        run: gh issue edit ${{github.event.issue.number}} --add-label $LABEL
      - name: Issue comment
        env:
          GH_TOKEN: ${{ github.token }}
          BODY: ${{ needs.evaluate.outputs.body }}
        run: |
          if [ "$BODY" != "None" ]; then
            gh issue comment ${{github.event.issue.number}} --body "$BODY"
          fi
        # run: |
        # if [ "$BODY" != "None" ]; then
        #   gh issue edit ${{github.event.issue.number}} --body "$BODY"
        # fi 
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # run: gh issue edit ${{ github.event.issue.number }} --add-label ${{ needs.evaluate.outputs.label }}

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idoutputs
# here is the appropriate syntax for referencing outputs from other jobs:
# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     # Map a step output to a job output
#     outputs:
#       output1: ${{ steps.step1.outputs.test }}
#       output2: ${{ steps.step2.outputs.test }}
#     steps:
#       - id: step1
#         run: echo "test=hello" >> "$GITHUB_OUTPUT"
#       - id: step2
#         run: echo "test=world" >> "$GITHUB_OUTPUT"
#   job2:
#     runs-on: ubuntu-latest
#     needs: job1
#     steps:
#       - env:
#           OUTPUT1: ${{needs.job1.outputs.output1}}
#           OUTPUT2: ${{needs.job1.outputs.output2}}
#         run: echo "$OUTPUT1 $OUTPUT2"